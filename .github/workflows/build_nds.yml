name: Build latest (NDS)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-nds
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: skylyrac/blocksds:dev-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          apt-get update
          apt-get -y install curl

      - name: Compile NDS build
        id: compile
        run: |
          make ds
          export BUILD_DSI=1
          make ds
 
         
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'ClassiCube-nds.nds'
          DEST_NAME: 'ClassiCube-nds.nds'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'build/nds/cc-arm9.elf'
          DEST_NAME: 'ClassiCube-nds.elf'

      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'ClassiCube-dsi.nds'
          DEST_NAME: 'ClassiCube-dsi.nds'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'build/dsi/cc-arm9.elf'
          DEST_NAME: 'ClassiCube-dsi.elf'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          DESTINATION_URL: '${{ secrets.NOTIFY_URL }}'
          WORKFLOW_NAME: 'nds'


      - uses: ./.github/actions/notify_failure
        if: failure()
        with:
          NOTIFY_MESSAGE: 'Failed to produce NDS build'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
