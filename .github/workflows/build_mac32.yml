name: Build latest (macOS 32 bit)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-mac32
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/classicube/minimal-osxcross:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Compile 32 bit macOS builds
        shell: bash
        id: compile
        env: 
          LIBS: "-framework Security -framework Cocoa -framework OpenGL -framework IOKit -lobjc -lgcc_s.1"
          SRCS: "src/*.c src/Window_cocoa.m third_party/bearssl/*.c"
          FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -fvisibility=hidden -rdynamic"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"${GITHUB_SHA::9}\"
 
          PATH=$PATH:/usr/local/compiler/target/bin
          i386-apple-darwin8-clang ${{ env.SRCS }} ${{ env.FLAGS }} $LATEST_FLAG -o cc-mac32-gl1 ${{ env.LIBS }}
          i386-apple-darwin8-clang ${{ env.SRCS }} ${{ env.FLAGS }} $LATEST_FLAG -DCC_GFX_BACKEND=CC_GFX_BACKEND_GL2 -o cc-mac32-gl2 ${{ env.LIBS }}

      - name: Compile 32 bit macOS builds (PowerPC)
        shell: bash
        id: compile_ppc
        env: 
          LIBS: "-framework Security -framework Cocoa -framework OpenGL -framework IOKit -lobjc"
          SRCS: "src/*.c src/Window_cocoa.m third_party/bearssl/*.c"
          FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -fvisibility=hidden -static-libgcc -Wl,-no_compact_unwind -isystem /usr/local/compiler/ppc/target/SDK/MacOSX10.5.sdk -Wl,-syslibroot /usr/local/compiler/ppc/target/SDK/MacOSX10.5.sdk"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"${GITHUB_SHA::9}\"
 
          mkdir -p /home/minty/repos/osxcross-ppc-test/target/bin
          ln -s /usr/local/compiler/ppc/target/bin/powerpc64-apple-darwin9-as /home/minty/repos/osxcross-ppc-test/target/bin/powerpc64-apple-darwin9-as
          PATH=$PATH:/usr/local/compiler/ppc/target/bin
          powerpc-apple-darwin9-base-gcc *${{ env.SRCS }} ${{ env.FLAGS }} $LATEST_FLAG -o cc-mac32-ppc -mmacosx-version-min=10.2.0 -m32 ${{ env.LIBS }}

      - name: Generate combined Intel + PowerPC build
        shell: bash
        id: gen_universal
        run: |
          PATH=$PATH:/usr/local/compiler/target/bin
          i386-apple-darwin8-lipo -create -output cc-mac32-universal cc-mac32-gl1 cc-mac32-ppc

      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile 32 bit macOS build'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
          
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-mac32-gl1'
          DEST_NAME: 'ClassiCube-mac32-OpenGL'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-mac32-gl2'
          DEST_NAME: 'ClassiCube-mac32-ModernGL'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile_ppc.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-mac32-ppc'
          DEST_NAME: 'ClassiCube-mac32-PPC'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.gen_universal.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-mac32-universal'
          DEST_NAME: 'ClassiCube-mac32'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          DESTINATION_URL: '${{ secrets.NOTIFY_URL }}'
          WORKFLOW_NAME: 'mac32'
