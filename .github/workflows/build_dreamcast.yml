name: Build latest (Dreamcast)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-dreamcast
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kos-builds/kos-dc:sha-20149ee-14.2.0
    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        shell: bash
        run: |
          apt-get update
          apt-get -y install genisoimage
          wget https://github.com/ClassiCube/rpi-compiling-stuff/raw/main/cdi4dc -O /opt/toolchains/dc/kos/utils/cdi4dc
          chmod +x /opt/toolchains/dc/kos/utils/cdi4dc

      - name: Compile Dreamcast build
        id: compile
        shell: bash
        run: |
          export PATH=/opt/toolchains/dc/kos/utils/:$PATH
          make dreamcast
          

      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile Dreamcast build'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
          
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'ClassiCube-dc.cdi'
          DEST_NAME: 'ClassiCube-dc.cdi'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'ClassiCube-dc.iso'
          DEST_NAME: 'ClassiCube-dc.iso'
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'ClassiCube-dc.elf'
          DEST_NAME: 'ClassiCube-dc.elf'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          DESTINATION_URL: '${{ secrets.NOTIFY_URL }}'
          WORKFLOW_NAME: 'dreamcast'
