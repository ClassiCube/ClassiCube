name: Build latest (RPI)
# trigger via either push to selected branches or on manual run
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-rpi
  cancel-in-progress: true

jobs:
#============================================
# ================ 32 BIT RPI ===============
# ===========================================
  build-RPI32:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: dockcross/linux-armv6-lts
    steps:
      - uses: actions/checkout@v4

      - name: Retrieve OpenGL and X11 dev files
        run: |
          mkdir rpi
          cd rpi
          wget https://github.com/ClassiCube/rpi-compiling-stuff/raw/main/rpi32.zip
          unzip rpi32.zip

      - name: Compile RPI 32 bit build
        id: compile
        env: 
          LIBS: "-lGLESv2 -lEGL -lX11 -lXi -lm -lpthread -ldl -lrt"
          SRCS: "src/*.c third_party/bearssl/*.c"
          FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -Werror -fvisibility=hidden -rdynamic"
          RPI32_FLAGS: "-DCC_BUILD_RPI -I rpi/include -L rpi/lib -Wl,--unresolved-symbols=ignore-in-shared-libs"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"$GITHUB_SHA\"
          
          $CC ${{ env.SRCS }} ${{ env.FLAGS }} ${{ env.RPI32_FLAGS }} $LATEST_FLAG -o cc-rpi32 ${{ env.LIBS }}


      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile RPI 32 bit build'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
          
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-rpi32'
          DEST_NAME: 'cc-rpi32'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          DESTINATION_URL: '${{ secrets.NOTIFY_URL }}'
          WORKFLOW_NAME: 'rpi32'


#============================================
# ================ 64 BIT RPI ===============
# ===========================================
  build-RPI64:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container:
      image: dockcross/linux-arm64-lts
    steps:
      - uses: actions/checkout@v4

      - name: Retrieve OpenGL and X11 dev files
        run: |
          mkdir rpi
          cd rpi
          wget https://github.com/ClassiCube/rpi-compiling-stuff/raw/main/rpi64.zip
          unzip rpi64.zip     

      - name: Compile RPI 64 bit build
        id: compile
        env: 
          LIBS: "-lGLESv2 -lEGL -lX11 -lXi -lm -lpthread -ldl -lrt"
          SRCS: "src/*.c third_party/bearssl/*.c"
          FLAGS: "-O1 -s -fno-stack-protector -fno-math-errno -Qn -Werror -fvisibility=hidden -rdynamic"
          RPI64_FLAGS: "-DCC_BUILD_RPI -I rpi/include -L rpi/lib -Wl,--unresolved-symbols=ignore-in-shared-libs"
        run: |
          LATEST_FLAG=-DCC_COMMIT_SHA=\"$GITHUB_SHA\"
          
          $CC ${{ env.SRCS }} ${{ env.FLAGS }} ${{ env.RPI64_FLAGS }} $LATEST_FLAG -o cc-rpi64 ${{ env.LIBS }}


      - uses: ./.github/actions/notify_failure
        if: ${{ always() && steps.compile.outcome == 'failure' }}
        with:
          NOTIFY_MESSAGE: 'Failed to compile RPI 64 bit build'
          WEBHOOK_URL: '${{ secrets.WEBHOOK_URL }}'
          
          
      - uses: ./.github/actions/upload_build
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          SOURCE_FILE: 'cc-rpi64'
          DEST_NAME: 'cc-rpi64'
          
          
      - uses: ./.github/actions/notify_success
        if: ${{ always() && steps.compile.outcome == 'success' }}
        with:
          DESTINATION_URL: '${{ secrets.NOTIFY_URL }}'
          WORKFLOW_NAME: 'rpi64'
